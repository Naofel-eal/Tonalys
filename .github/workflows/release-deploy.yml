name: CD â€¢ Build, Release & GitHub Pages

on:
  push:
    tags: ['v*.*.*']

permissions:
  contents: write
  pages: write
  id-token: write

env:
  NODE_VERSION: 22
  BUILD_DIR: dist/app/browser

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      zip_name: ${{ steps.meta.outputs.zip_name }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - id: meta
        run: |
          echo "ver=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
          echo "zip_name=tonalys-${GITHUB_REF_NAME#v}.zip" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci
      - run: npm run build:gh

      - run: zip -r ${{ steps.meta.outputs.zip_name }} ${{ env.BUILD_DIR }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-zip
          path: ${{ steps.meta.outputs.zip_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download ZIP
        uses: actions/download-artifact@v4
        with:
          name: build-zip
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "ðŸš€ Tonalys packaged for production."
          files: ${{ needs.build.outputs.zip_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-zip
          path: .

      - run: unzip -q ${{ needs.build.outputs.zip_name }} -d deploy-dir

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: deploy-dir/${{ env.BUILD_DIR }}

      - id: deploy
        uses: actions/deploy-pages@v4